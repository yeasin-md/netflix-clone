{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAMA,G,MAAU,oCAYDC,EAVE,CACfC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,yBAAD,OAA2BH,EAA3B,sBACrBI,cAAc,2BAAD,OAA6BJ,EAA7B,mBACbK,kBAAkB,yBAAD,OAA2BL,EAA3B,mBACjBM,kBAAkB,yBAAD,OAA2BN,EAA3B,mBACjBO,kBAAkB,yBAAD,OAA2BP,EAA3B,mBACjBQ,mBAAmB,yBAAD,OAA2BR,EAA3B,sBAClBS,mBAAmB,yBAAD,OAA2BT,EAA3B,oB,8CCLLU,E,OAHEC,EAAMC,OAAO,CAC5BC,QAAS,iC,wCC4DIC,MAxDf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EAChBC,mBAAS,IADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAERF,mBAAS,IAFD,mBAErCG,EAFqC,KAEzBC,EAFyB,KAkC5C,OA/BAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIT,GADlC,cACQU,EADR,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdG,KACC,CAACb,IAyBF,sBAAKc,UAAU,MAAf,UACE,6BAAKf,IAEL,qBAAKe,UAAU,eAAf,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,qBACEC,QAAS,kBAtBC,SAAAD,GACdX,EACFC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IACzBC,MAAK,SAAAC,GACJ,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDnB,EAAcgB,EAAUb,IAAI,SAE7BiB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAYKG,CAAYd,IAE3Be,IAAG,UA7CQ,wCA6CR,OACD9B,EAAae,EAAMgB,YAAchB,EAAMiB,eAEzCnB,UAAS,sBAAiBb,GAAc,oBACxCiC,IAAKlB,EAAMG,MALNH,EAAMmB,SAShB9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAvCpC,CACXC,OAAQ,QACRC,MAAO,OACPC,WAAY,CACVC,SAAU,U,MC2BDC,MA7Cf,WAAmB,IAgBCC,EAAKC,EAhBP,EACU1C,mBAAS,IADnB,mBACTc,EADS,KACF6B,EADE,KAmBhB,OAjBAtC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIxB,EAASE,uBAD3C,cACQuB,EADR,OAEEmC,EACEnC,EAAQC,KAAKC,QACXkC,KAAKC,MAAMD,KAAKE,SAAWtC,EAAQC,KAAKC,QAAQqC,OAAS,KAJ/D,kBAOSvC,GAPT,4CADc,uBAAC,WAAD,wBAUdG,KACC,IACHe,QAAQC,IAAIb,GAMV,yBACEF,UAAU,SACVoC,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,OAAD,OAzBN,wCAyBM,cAAoBpC,QAApB,IAAoBA,OAApB,EAAoBA,EAAOiB,cAA3B,KACfoB,mBAAoB,iBALxB,UAQE,sBAAKvC,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,UACQ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOsC,iBAEzC,sBAAKxC,UAAU,kBAAf,UACE,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,qBACA,oBAAIA,UAAU,sBAAd,UAnBU6B,EAoBC,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAOuC,SApBJX,EAoBc,KAnBzB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIa,OAAO,EAAGZ,EAAI,GAAK,MAAQD,WAuBtD,qBAAK7B,UAAU,2B,MChBN2C,MA1Bf,WAAmB,IAAD,EACWvD,oBAAS,GADpB,mBACTwD,EADS,KACHC,EADG,KAchB,OAZApD,qBAAU,WAQR,OAPAqD,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GAEXA,GAAW,MAGR,WACLC,OAAOG,oBAAoB,aAE5B,IAED,sBAAKjD,UAAS,cAAS4C,GAAQ,cAA/B,UACE,qBACE3B,IAAI,yBACJG,IAAI,eACJpB,UAAU,cAEZ,qBAAKiB,IAAI,mBAAmBG,IAAI,SAASpB,UAAU,gBAAiB,QCI3DkD,MArBf,WACE,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEf,MAAM,oBACNC,SAAUf,EAASE,sBACnBc,YAAU,IAEZ,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAUf,EAASC,gBAC7C,cAAC,EAAD,CAAKa,MAAM,YAAYC,SAAUf,EAASG,gBAC1C,cAAC,EAAD,CAAKW,MAAM,gBAAgBC,SAAUf,EAASK,oBAC9C,cAAC,EAAD,CAAKS,MAAM,gBAAgBC,SAAUf,EAASO,qBAC9C,cAAC,EAAD,CAAKO,MAAM,gBAAgBC,SAAUf,EAASC,gBAC9C,cAAC,EAAD,CAAKa,MAAM,iBAAiBC,SAAUf,EAASO,qBAC/C,cAAC,EAAD,CAAKO,MAAM,gBAAgBC,SAAUf,EAASQ,yBCXrCwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BZ,M","file":"static/js/main.487ad8b6.chunk.js","sourcesContent":["const API_KEY = '4c94dbbd5b88e1e29ae805d8a61d22bf';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n  fetchNetflixOriginals: `/discover/tv/?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/tv/?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/tv/?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/tv/?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/tv/?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/tv/?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;\r\n\r\n// https://api.themoviedb.org/3/discover/tv/?api_key=4c94dbbd5b88e1e29ae805d8a61d22bf&with_genres=27\r\n// `/discover/tv/?api_key=${API_KEY}&with_genres=27`\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\nexport default instance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nconst base_url_image = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: '390px',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = movie => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie?.name || '')\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map(movie => (\r\n          <img\r\n            onClick={() => handleClick(movie)}\r\n            key={movie.id}\r\n            src={`${base_url_image}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  }\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        backgroundImage: `url(${base_url}${movie?.backdrop_path})`,\r\n        backgroundPosition: 'center center',\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n          <h1 className=\"banner__description\">\r\n            {truncate(movie?.overview, 150)}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'}`}>\r\n      <img\r\n        src=\"logos/netflix-logo.png\"\r\n        alt=\"Netflix Logo\"\r\n        className=\"nav__logo\"\r\n      />\r\n      <img src=\"logos/avatar.png\" alt=\"avatar\" className=\"nav__avatar\" />{' '}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport requests from './requests';\nimport './App.css';\nimport Row from './Row';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documantaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}